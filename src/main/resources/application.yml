server:
  port: 8080
  servlet:
    context-path: /api
    session:
      timeout: 30m # Session超时时间30分钟
      cookie:
        max-age: 1800 # Cookie最大存活时间（秒）
        http-only: true # 防止XSS攻击
        secure: false # 本地开发设为false，生产环境建议设为true
        same-site: lax # 允许跨站请求携带cookie

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://localhost:3306/demo_db?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:123456}
    hikari:
      minimum-idle: ${DB_POOL_MIN_IDLE:10}  # 最小空闲连接数
      maximum-pool-size: ${DB_POOL_MAX_SIZE:50}  # 最大连接池大小
      auto-commit: true
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}  # 空闲超时时间(10分钟)
      pool-name: SpringBootJPAHikariCP
      max-lifetime: ${DB_MAX_LIFETIME:1800000}  # 连接最大生命周期(30分钟)
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}  # 连接超时时间(20秒)
      validation-timeout: ${DB_VALIDATION_TIMEOUT:5000}  # 验证超时时间(5秒)
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}  # 连接泄漏检测阈值(60秒)
      connection-test-query: SELECT 1  # 连接测试查询

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:16}  # 最大活跃连接数
          max-wait: ${REDIS_POOL_MAX_WAIT:3000ms}  # 最大等待时间
          max-idle: ${REDIS_POOL_MAX_IDLE:8}  # 最大空闲连接数
          min-idle: ${REDIS_POOL_MIN_IDLE:2}  # 最小空闲连接数
        shutdown-timeout: ${REDIS_SHUTDOWN_TIMEOUT:100ms}  # 关闭超时时间

  session:
    store-type: redis # 使用Redis存储Session
    timeout: 1800s # 30分钟超时
    redis:
      flush-mode: on-save
      namespace: spring:session

  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: ${SPRING_CACHE_REDIS_TIME_TO_LIVE:1800000} # 默认30分钟TTL
      cache-null-values: ${SPRING_CACHE_REDIS_CACHE_NULL_VALUES:false} # 不缓存null值
      key-prefix: ${SPRING_CACHE_REDIS_KEY_PREFIX:cache:} # 缓存key前缀
      use-key-prefix: ${SPRING_CACHE_REDIS_USE_KEY_PREFIX:true} # 使用key前缀

  # AOP配置
  aop:
    auto: true
    proxy-target-class: true

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 开启驼峰命名
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 控制台SQL日志
  global-config:
    db-config:
      # 主键策略
      id-type: auto
      # 注意：使用时间戳作为逻辑删除字段时，MyBatis-Plus默认配置可能不适用
      # 我们通过自定义逻辑删除处理器来实现
    banner: false # 关闭MyBatis-Plus的banner
  # 类型别名包路径
  type-aliases-package: com.spark.demo.entity

knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: '实体类列表'
  production: false # 生产环境建议设为true

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,beans,mappings
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
    tags:
      application: ${app.name:SpringBoot通用后台服务}
      environment: ${spring.profiles.active:dev}

# 应用自定义配置
app:
  name: SpringBoot通用后台服务
  version: 1.0.0
  description: 基于SpringBoot3的通用后台服务
  author: spark