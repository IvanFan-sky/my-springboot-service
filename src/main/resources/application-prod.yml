server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/api}
    session:
      timeout: ${SESSION_TIMEOUT:30m}
      cookie:
        max-age: ${COOKIE_MAX_AGE:1800}
        http-only: true
        secure: ${COOKIE_SECURE:true}
        same-site: strict

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://localhost:3306/demo_db_prod?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=true}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    hikari:
      minimum-idle: ${DB_POOL_MIN_IDLE:20}
      maximum-pool-size: ${DB_POOL_MAX_SIZE:100}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      validation-timeout: ${DB_VALIDATION_TIMEOUT:5000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: ${REDIS_TIMEOUT:5000ms}
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:32}
          max-wait: ${REDIS_POOL_MAX_WAIT:5000ms}
          max-idle: ${REDIS_POOL_MAX_IDLE:16}
          min-idle: ${REDIS_POOL_MIN_IDLE:4}

  session:
    store-type: redis
    timeout: 1800s
    redis:
      flush-mode: on-save
      namespace: spring:session:prod

  # 生产环境缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 生产环境1小时TTL
      cache-null-values: false # 不缓存null值
      key-prefix: "prod:cache:" # 生产环境缓存key前缀
      use-key-prefix: true # 使用key前缀

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: # 生产环境不输出SQL日志
  global-config:
    db-config:
      logic-delete-field: deletedTime
      logic-delete-value: now()
      logic-not-delete-value: null
    banner: false

knife4j:
  enable: ${API_DOC_ENABLED:false}
  production: true

# 生产环境监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: never
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
    tags:
      application: ${app.name:SpringBoot通用后台服务}
      environment: prod

# 应用自定义配置
app:
  name: SpringBoot通用后台服务
  version: 1.0.0
  description: 基于SpringBoot3的通用后台服务（生产环境）
  author: spark
  jwt:
    secret: ${JWT_SECRET:}
    expiration: ${JWT_EXPIRATION:2}
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:7}
  
  security:
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:}
      allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS:false}
      max-age: ${CORS_MAX_AGE:3600}
    
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:true}
      default-limit: ${RATE_LIMIT_DEFAULT:100}
      login-limit: ${RATE_LIMIT_LOGIN:5}
      sms-limit: ${RATE_LIMIT_SMS:1}

  async:
    core-pool-size: ${ASYNC_CORE_POOL_SIZE:20}
    max-pool-size: ${ASYNC_MAX_POOL_SIZE:100}
    queue-capacity: ${ASYNC_QUEUE_CAPACITY:500}
    keep-alive-seconds: ${ASYNC_KEEP_ALIVE_SECONDS:60}
    thread-name-prefix: ${ASYNC_THREAD_NAME_PREFIX:prod-async-}